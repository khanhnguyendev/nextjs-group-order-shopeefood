// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Room {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  hostedBy     String
  restaurantId Int
  deliveryId   Int
  shopUrl      String
  roomName     String
  description  String?
  expiredAt    DateTime
  isPrivate    Boolean
  password     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Shop {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  restaurantId Int
  deliveryId   Int
  name         String
  description  String?
  address      String
  url          String
  phones       String
  photos       Json[]
  categories   String[]
  rating       Float
  totalReview  Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([deliveryId])
}

model Menu {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  restaurantId  Int
  deliveryId    Int
  name          String
  description   String?
  photos        Json[]
  price         String
  discountPrice String
  totalLike     String
  displayOrder  Float
  isActive      Boolean
  isDeleted     Boolean
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([restaurantId, deliveryId])
}

model Order {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String
  roomId       String
  restaurantId Int
  deliveryId   Int
  name         String
  price        String
  quantity     Int
  amount       Int
  note         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([roomId, userId, restaurantId, deliveryId])
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @unique
  email        String   @unique
  username     String
  firstName    String
  lastName     String
  createdAt    DateTime
  updatedAt    DateTime
  imageUrl     String
  hasImage     Boolean
  gender       String
  birthday     String
  lastSignInAt DateTime @default(now())

  @@index([userId, email])
}
